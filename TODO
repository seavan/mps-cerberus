version 0.1.0:
[v] Реализация транскодирования AV
  [v] Генерация видео из cover.jpg и трека
  [v] Парсинг stdout / stderr от ffmpeg (для emit-а прогресса)
  [v] События PROGRESS не надо класть в redis, надо слать их сразу из Celery Task
[v] Реализация публикации на YouTube
[v] Устаканить формат сообщений между компонентами
[v] Написать Celery Task parse для разбора ID3 тегов
[v] Написать Celery Task transcode_a() для генерации mp3 файла
[v] Вместо if / elif / else при создании storage надо сделать динамический выбор
  хранилища через hasattr() ну или хотя бы вынести в отдельный helper

version 0.2.0:
[v] Реализация удаления c YouTube
[v] Не нравится текущая реализация Workflow через fail() / raise()
[v] Дописать работу в parse_metadata() для FLAC и старых версий mp3 и написать
  unit тесты для этого.
[v] Дописать работу в parse_metadata() с "левыми" кодировками
[v] Структуризировать все cerberus исключения и собрать их в cerberus/exceptions.py
[v] В Celery Task-ах transcode_*() удалять в конце временные файлы, так же
  добавить опцию keep_data для сохранения временных файлов на время отладки
[v] Изменить страктуру конф. файла, так что бы можно было настраивать redis / storage
 для каждого типа задач отдельно

version 0.2.5:
[-] Протестировать аплоад / удаление на YouTube на реальном staging аккаунте

version 0.3.0:
[v] Не прокидывать storage в service, в этом нет смысла
[v] Описание базового интерфейса стораджа (с исключениями)
[-] Добавить возможность передавать параметры кодирования в задачи transcode_*
[-] Убрать try / except Exception as e, ловить нужно только ожидаемые исключения,
  остальные нужно отправлять в Errbit, а в fail() отдавать реальную проблему
[v] Хочется, что бы внутри Celery Task было меньше ручной работы, например временные файлы
  удалялись сами собой, при создании попадая в специальный массив.
[-] Параметризировать params для success
[-] Сообщать подробную проблему ошибки при status=400

version 0.4.0:
[-] Реализовать публикацию на сервисе PromoDJ
